#include<gtk/gtk.h>
#include<stdbool.h>
#include<stdlib.h>

//check whether success or tie
bool check()
{

	int a[15][15],i,j;
	for(i=0;i<15;i++){
		for(j=0;j<15;j++){
			const char *text=gtk_button_get_label(GTK_BUTTON(buttons[i][j]));
			if(text==NULL)
				a[i][j]=-1;
			else if(strcmp(text,"X"))
			{
				a[i][j]=1;
			}
			else if(strcmp(text,"0"))
			{
				a[i][j]=0;
			}
		}
	}
	//check rows
	for (i=0;i<15;i++){
	  if (a[i][0]==a[i][1]&&a[i][0]==a[i][2]&&a[i][0]==a[i][3]&&a[i][0]==a[i][4]&&a[i][0]!=a[i][5]){
	    if (a[i][0]==1){
		    show_message(1);
		    user++;
		    state=1;
		    char text[30];
		    sprintf(text,"Computer:%d    User:%d",computer,user);
		    gtk_label_set_text(GTK_LABEL(stat),text);
		    return 0;
	    }
	    if (a[i][0]==0){
		    show_message(2);
		    computer++;
		    state=1;
		    char text[30];
		    sprintf(text,"Computer:%d    User:%d",computer,user);
		    gtk_label_set_text(GTK_LABEL(stat),text);
		    return 0;
	    }
	  }
	  for (j=0;j<9;j++){
	    if (a[i][j+1]==a[i][j+2]&&a[i][j+1]==a[i][j+3]&&a[i][j+1]==a[i][j+4]&&a[i][j+1]==a[i][j+5]){
	      if (a[i][j]!=a[i][j+1]){
		if (a[i][j]==-1){
		  if (a[i][j+1]==1){
		    show_message(1);
		    user++;
		    state=1;
		    char text[30];
		    sprintf(text,"Computer:%d    User:%d",computer,user);
		    gtk_label_set_text(GTK_LABEL(stat),text);
		    return 0;
		  }
		  if (a[i][j+1]==0){
		    show_message(2);
		    computer++;
		    state=1;
		    char text[30];
		    sprintf(text,"Computer:%d    User:%d",computer,user);
		    gtk_label_set_text(GTK_LABEL(stat),text);
		    return 0;
		  }
		}
		else {
		  if (a[i][j+6]!=a[i][j+1]&&a[i][j+6]!=a[i][j]){
		    if (a[i][j+1]==1){
		      show_message(1);
		      user++;
		      state=1;
		      char text[30];
		      sprintf(text,"Computer:%d    User:%d",computer,user);
		      gtk_label_set_text(GTK_LABEL(stat),text);
		      return 0;
		    }
		    if (a[i][j+1]==0){
		      show_message(2);
		      computer++;
		      state=1;
		      char text[30];
		      sprintf(text,"Computer:%d    User:%d",computer,user);
		      gtk_label_set_text(GTK_LABEL(stat),text);
		      return 0;
		    }
		  }
		}
	      }
	    }
	
	    if (a[i][9]!=a[i][10]&&a[i][10]==a[i][11]&&a[i][10]==a[i][12]&&a[i][10]==a[i][13]&&a[i][10]==a[i][14]){
	      if (a[i][10]==1){
		show_message(1);
		user++;
		state=1;
		char text[30];
		sprintf(text,"Computer:%d    User:%d",computer,user);
		gtk_label_set_text(GTK_LABEL(stat),text);
		return 0;
	      }
	      if (a[i][10]==0){
		show_message(2);
		computer++;
		state=1;
		char text[30];
		sprintf(text,"Computer:%d    User:%d",computer,user);
		gtk_label_set_text(GTK_LABEL(stat),text);
		return 0;
	      }
	    }
	  }
	}
	
	//check columns
	for (j=0;j<15;j++){
	  if (a[0][j]==a[1][j]&&a[0][j]==a[2][j]&&a[0][j]==a[3][j]&&a[0][j]==a[4][j]&&a[0][j]!=a[5][j]){
	    if (a[0][j]==1){
		    show_message(1);
		    user++;
		    state=1;
		    char text[30];
		    sprintf(text,"Computer:%d    User:%d",computer,user);
		    gtk_label_set_text(GTK_LABEL(stat),text);
		    return 0;
	    }
	    if (a[0][j]==0){
		    show_message(2);
		    computer++;
		    state=1;
		    char text[30];
		    sprintf(text,"Computer:%d    User:%d",computer,user);
		    gtk_label_set_text(GTK_LABEL(stat),text);
		    return 0;
	    }
	  }
	  for (i=0;i<9;i++){
	    if (a[i+1][j]==a[i+2][j]&&a[i+1][j]==a[i+3][j]&&a[i+1][j]==a[i+4][j]&&a[i+1][j]==a[i+5][j]){
	      if (a[i][j]!=a[i+1][j]){
		if (a[i][j]==-1){
		  if (a[i+1][j]==1){
		    show_message(1);
		    user++;
		    state=1;
		    char text[30];
		    sprintf(text,"Computer:%d    User:%d",computer,user);
		    gtk_label_set_text(GTK_LABEL(stat),text);
		    return 0;
		  }
		  if (a[i+1][j]==0){
		    show_message(2);
		    computer++;
		    state=1;
		    char text[30];
		    sprintf(text,"Computer:%d    User:%d",computer,user);
		    gtk_label_set_text(GTK_LABEL(stat),text);
		    return 0;
		  }
		}
		else {
		  if (a[i+6][j]!=a[i+1][j]&&a[i+6][j]!=a[i][j]){
		    if (a[i+1][j]==1){
		      show_message(1);
		      user++;
		      state=1;
		      char text[30];
		      sprintf(text,"Computer:%d    User:%d",computer,user);
		      gtk_label_set_text(GTK_LABEL(stat),text);
		      return 0;
		    }
		    if (a[i+1][j]==0){
		      show_message(2);
		      computer++;
		      state=1;
		      char text[30];
		      sprintf(text,"Computer:%d    User:%d",computer,user);
		      gtk_label_set_text(GTK_LABEL(stat),text);
		      return 0;
		    }
		  }
		}
	      }
	    }
	
	    if (a[9][j]!=a[10][j]&&a[10][j]==a[11][j]&&a[10][j]==a[12][j]&&a[10][j]==a[13][j]&&a[10][j]==a[14][j]){
	      if (a[10][j]==1){
		show_message(1);
		user++;
		state=1;
		char text[30];
		sprintf(text,"Computer:%d    User:%d",computer,user);
		gtk_label_set_text(GTK_LABEL(stat),text);
		return 0;
	      }
	      if (a[10][j]==0){
		show_message(2);
		computer++;
		state=1;
		char text[30];
		sprintf(text,"Computer:%d    User:%d",computer,user);
		gtk_label_set_text(GTK_LABEL(stat),text);
		return 0;
	      }
	    }
	  }
	}

	//check diagonals 1

	for (i=0;i<9;i++){
	  if (a[i][0]==a[i+1][1]&&a[i][0]==a[i+2][2]&&a[i][0]==a[i+3][3]&&a[i][0]==a[i+4][4]&&a[i][0]!=a[i+5][5]){
	    if (a[i][0]==1){
	      show_message(1);
	      user++;
	      state=1;
	      char text[30];
	      sprintf(text,"Computer:%d    User:%d",computer,user);
	      gtk_label_set_text(GTK_LABEL(stat),text);
	      return 0;
	    }
	    if (a[i][0]==0){
	      show_message(2);
	      computer++;
	      state=1;
	      char text[30];
	      sprintf(text,"Computer:%d    User:%d",computer,user);
	      gtk_label_set_text(GTK_LABEL(stat),text);
	      return 0;
	    }
	  }
	 
	}
	
	for (i=0;i<9;i++){
	  if (a[i+1][10]==a[i+2][11]&&a[i+1][10]==a[i+3][12]&&a[i+1][10]==a[i+4][13]&&a[i+1][10]==a[i+5][14]&&a[i][9]!=a[i+1][10]){
	    if (a[i][0]==1){
	      show_message(1);
	      user++;
	      state=1;
	      char text[30];
	      sprintf(text,"Computer:%d    User:%d",computer,user);
	      gtk_label_set_text(GTK_LABEL(stat),text);
	      return 0;
	    }
	    if (a[i][0]==0){
	      show_message(2);
	      computer++;
	      state=1;
	      char text[30];
	      sprintf(text,"Computer:%d    User:%d",computer,user);
	      gtk_label_set_text(GTK_LABEL(stat),text);
	      return 0;
	    }
	  }
	 
	}
	


	  
	if(done()){
		show_message(0);
		state=1;
		turn=(turn)?0:1;
		return 0;
	}
	return 1;
}
		
//mark buttons if clicked
int mark(GtkWidget *button)
{
	if(state)
		return 0;
	if(gtk_button_get_label(GTK_BUTTON(button))==NULL)
	{
		gtk_button_set_label(GTK_BUTTON(button),"X");
		gtk_label_set_text(GTK_LABEL(result),"Game in progress");
	}
	else
	{
		return 0;
	}
	if(check())
	{
		computer_mark();
		check();
	}
	return 0;
}
